import json
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

BOT_TOKEN = "8492419619:AAHwjD2yCOi3ifoTajrOto2ryb1L9tti010"

# –î–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
SUBSCRIPTIONS = {
    'standart': {
        'name': 'üéØ –ë–∞–∑–æ–≤—ã–π',
        'price': 0,
        'period': '–Ω–∞–≤—Å–µ–≥–¥–∞',
        'features': [
            '‚úì –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏',
            '‚úì –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø',
            '‚úì –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        ],
        'payment_url': 'https://example.com/pay/standart'
    },
    'premium': {
        'name': 'üåü –°—Ç—É–¥–µ–Ω—Ç',
        'price': 199,
        'period': '–≤ –º–µ—Å—è—Ü',
        'features': [
            '‚úì –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Standart',
            '‚úì –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤',
            '‚úì –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏',
            '‚úì –î–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∞–Ω–∞–ª–æ–≥–æ–≤'
        ],
        'payment_url': 'https://example.com/pay/premium'
    },
    'premium_plus': {
        'name': 'üöÄ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
        'price': 499,
        'period': '–≤ –º–µ—Å—è—Ü',
        'features': [
            '‚úì –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Premium',
            '‚úì –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∞–Ω–∞–ª–∏–∑ —Å—Ö–µ–º',
            '‚úì –î–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π',
            '‚úì –°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        ],
        'payment_url': 'https://example.com/pay/premium_plus'
    }
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_keyboard = [
    ['üíé –ü–æ–¥–ø–∏—Å–∫–∏', 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞'],
    ['üìä –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', '‚ÑπÔ∏è –û –ø—Ä–æ–¥—É–∫—Ç–µ']
]

subscriptions_keyboard = [
    ['üéØ –ë–∞–∑–æ–≤—ã–π', 'üåü –°—Ç—É–¥–µ–Ω—Ç'],
    ['üöÄ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª', 'üîô –ù–∞–∑–∞–¥'],
]

support_keyboard = [
    ['üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
    ['üîô –ù–∞–∑–∞–¥']
]

main_reply_markup = ReplyKeyboardMarkup(main_keyboard, resize_keyboard=True)
subscriptions_reply_markup = ReplyKeyboardMarkup(subscriptions_keyboard, resize_keyboard=True)
support_reply_markup = ReplyKeyboardMarkup(support_keyboard, resize_keyboard=True)

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
PURCHASES_FILE = 'purchases.json'

def load_purchases():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—É–ø–∫–∞—Ö"""
    try:
        with open(PURCHASES_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_purchases(purchases):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—É–ø–∫–∞—Ö"""
    with open(PURCHASES_FILE, 'w', encoding='utf-8') as f:
        json.dump(purchases, f, ensure_ascii=False, indent=2)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = """
–ü—Ä–∏–≤–µ—Ç! ü§ô –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ Joule Bot. 

–ó–¥–µ—Å—å –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å —Å –∑–∞–¥–∞—á–∞–º–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å —ç–ª–µ–∫—Ç—Ä–æ—Å—Ö–µ–º–∞–º–∏. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ò–ò –º–æ–¥–µ–ª–∏, –æ–±—É—á–µ–Ω–Ω—ã–µ –Ω–∞ –æ–±—à–∏—Ä–Ω—ã—Ö –∏—Å—Ç–æ—á–∏–Ω–∫–∞—Ö –¥–∞–Ω–Ω—ã—Ö.

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∏ –ø–æ–ª—É—á–∏ –ª–µ—â–∞ –æ—Ç–≤–µ—Çüòä
    """
    
    await update.message.reply_text(
        welcome_text,
        reply_markup=main_reply_markup
    )

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)"""
    menu_text = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá"
    
    await update.message.reply_text(
        menu_text,
        reply_markup=main_reply_markup
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text
    user_id = update.message.from_user.id
    
    if text == 'üíé –ü–æ–¥–ø–∏—Å–∫–∏':
        await show_subscriptions(update, context)
    elif text == 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        await show_support(update, context)
    elif text == 'üìä –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç':
        await show_my_account(update, context)
    elif text == '‚ÑπÔ∏è –û –ø—Ä–æ–¥—É–∫—Ç–µ':
        await show_about(update, context)
    elif text == 'üéØ –ë–∞–∑–æ–≤—ã–π':
        await show_subscription_details(update, context, 'standart')
    elif text == 'üåü –°—Ç—É–¥–µ–Ω—Ç':
        await show_subscription_details(update, context, 'premium')
    elif text == 'üöÄ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª':
        await show_subscription_details(update, context, 'premium_plus')
    elif text == 'üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É':
        await contact_support(update, context)
    elif text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await show_contacts(update, context)
    elif text == 'üîô –ù–∞–∑–∞–¥':
        await show_main_menu(update, context)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤–º–µ—Å—Ç–æ start
    else:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ üëá",
            reply_markup=main_reply_markup
        )

async def show_subscriptions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
    subscriptions_text = """
üíé **–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:**

üéØ **–ë–∞–∑–æ–≤—ã–π** - –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø
‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

üåü **–°—Ç—É–¥–µ–Ω—Ç** - 199‚ÇΩ/–º–µ—Å—è—Ü  
‚Ä¢ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ë–∞–∑–æ–≤—ã–π
‚Ä¢ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∞–Ω–∞–ª–æ–≥–æ–≤

üöÄ **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª** - 499‚ÇΩ/–º–µ—Å—è—Ü
‚Ä¢ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –°—Ç—É–¥–µ–Ω—Ç
‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∞–Ω–∞–ª–∏–∑ —Å—Ö–µ–º
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π
‚Ä¢ –°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ üëá
    """
    
    await update.message.reply_text(
        subscriptions_text,
        reply_markup=subscriptions_reply_markup,
        parse_mode='Markdown'
    )

async def show_subscription_details(update: Update, context: ContextTypes.DEFAULT_TYPE, subscription_type: str):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –∫–Ω–æ–ø–∫—É –ø–æ–∫—É–ø–∫–∏"""
    sub = SUBSCRIPTIONS[subscription_type]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –¥–µ—Ç–∞–ª—è–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    features_text = "\n".join(sub['features'])
    
    if sub['price'] == 0:
        price_text = "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ"
    else:
        price_text = f"{sub['price']}‚ÇΩ {sub['period']}"
    
    subscription_text = f"""
{sub['name']}

üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: {price_text}

üìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
{features_text}

üéÅ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –ø–æ–¥–ø–∏—Å–∫–∏!
    """
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
    if sub['price'] > 0:
        keyboard = [
            [InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", url=sub['payment_url'])],
            [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"paid_{subscription_type}")]
        ]
    else:
        keyboard = [
            [InlineKeyboardButton("üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", callback_data=f"get_free_{subscription_type}")]
        ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        subscription_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def show_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–¥–µ–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    support_text = """
üÜò **–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏**

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º:
    """
    
    await update.message.reply_text(
        support_text,
        reply_markup=support_reply_markup
    )

async def contact_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    contact_text = """
üí¨ **–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É**

–î–ª—è –±—ã—Å—Ç—Ä–æ–π –ø–æ–º–æ—â–∏:
‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º: @support_username
‚Ä¢ –ò–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ –∑–¥–µ—Å—å

–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è (9:00-21:00 –ú–°–ö)
    """
    
    await update.message.reply_text(
        contact_text,
        reply_markup=support_reply_markup
    )

async def show_contacts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    contacts_text = """
üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã**

‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: @support_username
‚Ä¢ Email: support@example.com
‚Ä¢ –°–∞–π—Ç: example.com

‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: 
–ü–Ω-–ü—Ç: 9:00-21:00 –ú–°–ö
–°–±-–í—Å: 10:00-18:00 –ú–°–ö
    """
    
    await update.message.reply_text(
        contacts_text,
        reply_markup=support_reply_markup
    )

async def show_my_account(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"""
    user = update.message.from_user
    user_id = user.id
    
    purchases = load_purchases()
    user_purchases = purchases.get(str(user_id), {})
    
    if user_purchases:
        current_sub = user_purchases.get('current_subscription', 'Standart')
        expires = user_purchases.get('expires', '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ')
        
        account_text = f"""
üìä **–í–∞—à –∞–∫–∫–∞—É–Ω—Ç**

üë§ –ò–º—è: {user.first_name}
üÜî ID: {user_id}
üíé –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {current_sub}
üìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {expires}

–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –∏–ª–∏ —Å–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É? 
–í—ã–±–µ—Ä–∏—Ç–µ "üíé –ü–æ–¥–ø–∏—Å–∫–∏" –≤ –º–µ–Ω—é!
        """
    else:
        account_text = f"""
üìä **–í–∞—à –∞–∫–∫–∞—É–Ω—Ç**

üë§ –ò–º—è: {user.first_name}
üÜî ID: {user_id}
üíé –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: –ë–∞–∑–æ–≤—ã–π (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)

üéÅ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º 
–≤—ã–±–µ—Ä–∏—Ç–µ "üíé –ü–æ–¥–ø–∏—Å–∫–∏" –≤ –º–µ–Ω—é!
        """
    
    await update.message.reply_text(
        account_text,
        reply_markup=main_reply_markup,
        parse_mode='Markdown'
    )

async def show_about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ"""
    about_text = """
‚ÑπÔ∏è **–û –ø—Ä–æ–¥—É–∫—Ç–µ**

Joule-Bot - –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Ä–µ—à–µ–Ω–∏–∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–µ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–µ.

üåü **–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã
‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

üí° –ù–∞—à–∞ –º–∏—Å—Å–∏—è - –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –∏ —Ç–æ—á–Ω–æ –ø–æ–º–æ—á—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, —Ç–∞–∫–∏—Ö –∫–∞–∫ –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞, –°—Ö–µ–º–æ—Ç–µ—Ö–Ω–∏–∫–∞, –§–∏–∑–∏–∫–∞, –¶–∏—Ñ—Ä–æ–≤–∞—è —Å—Ö–µ–º–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏ —Å–º–µ–∂–Ω—ã–µ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã!
    """
    
    await update.message.reply_text(
        about_text,
        reply_markup=main_reply_markup
    )

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    callback_data = query.data
    user_id = query.from_user.id
    
    if callback_data.startswith('paid_'):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–Ø –æ–ø–ª–∞—Ç–∏–ª"
        subscription_type = callback_data.replace('paid_', '')
        await query.edit_message_text(
            f"‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ {SUBSCRIPTIONS[subscription_type]['name']}...\n\n"
            "–û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –æ–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.",
            parse_mode='Markdown'
        )
        
    elif callback_data.startswith('get_free_'):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ"
        subscription_type = callback_data.replace('get_free_', '')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ "–ø–æ–∫—É–ø–∫–µ"
        purchases = load_purchases()
        if str(user_id) not in purchases:
            purchases[str(user_id)] = {}
        
        purchases[str(user_id)]['current_subscription'] = SUBSCRIPTIONS[subscription_type]['name']
        purchases[str(user_id)]['expires'] = '–ù–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ'
        save_purchases(purchases)
        
        await query.edit_message_text(
            f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É {SUBSCRIPTIONS[subscription_type]['name']}!\n\n"
            "–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ–π –ø–æ–¥–ø–∏—Å–∫–∏. "
            "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π –∑–∞–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'üìä –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç'.",
            parse_mode='Markdown'
        )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    app = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    from telegram.ext import CallbackQueryHandler
    app.add_handler(CallbackQueryHandler(handle_callback))
    
    print("Joule Bot –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()